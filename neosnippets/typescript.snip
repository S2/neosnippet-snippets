snippet c
	
	module ${1}{
		export class ${2} extends ${3}{
			/**
			 * <br>
			 *
			 * @class $1.$2
			 * @extends $3
			 * @constructor 
			 * @param {} 
			 */
			constructor(){
			}
			
			private getCsrfToken() : string {
				return (<HTMLInputElement>document.getElementsByClassName("csrf_token")[0]).value
			}
		}
	}

snippet i
	interface ${1}{
		${2} : ${3};
	}


snippet p
	this.${1} : $3 = $1;
	/**
		<br>
		
		@method set${2} 
		@param {${3}} 
		@return void 
	*/
	public set$2():void{
		this.$1 = $1;
	}
	
	/**
		<br>
		
		@method get$2 
		@param {} 
		@return $3
	*/
	public get$2():$3{
		return this.$1
	}

snippet pr
	private ${1}(){
	}

snippet pu
	/**
		<br>
		
		@method ${1} 
		@param {} 
		@return ${2}
	*/
	public $1():$2{
	}

snippet pt
	/**
		<br>
		
		@method ${1} 
		@param {} 
		@return ${2}
	*/
	protected $1():$2{
	}



snippet l
	for( var i = 0 , arrayLength = ${1}.length ; i < arrayLength ; i++){
		var row = $1[i];
	}

snippet ge
	var ${1} = document.getElementById("${2}")

snippet cr
	var ${1} = document.createElement("${2}")

snippet ae
	${1}.addEventListener("click" , (e : Event)=>{})

snippet ti
	setTimeout(()=>{
		
	} , 1000)

snippet in
	var intervalId = setInterval(()=>{
		
		clearInterval(intervalId)
	} , 1000)

snippet el
	${1} : HTML${3}Element = <HTML$3Element>document.getElementById("${2}")

snippet ac
	private _${1} : ${2}
	
	get $1() : $2{
		return this._$1
	}
	
	set $1($1 : $2){
		this._$1 = $1
	}


snippet xhr
	var url = ""
	var xhr = new XMLHttpRequest();
	xhr.open("POST" , url , true)
	xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
	var json = encodeURIComponent(this.getJSON());
	var token = this.getCsrfToken();
	xhr.addEventListener("readystatechange" , ()=>{
		if (xhr.readyState === 4 && xhr.status === 200){
			var result = JSON.parse(xhr.responseText);
		}
	});
	xhr.send('json=' + json + "&csrf_token=" + token);

snippet enum
	enum ${1} {
		${2} ,
	}

snippet ap
	${1}.appendChild(${2})

snippet table
	var table = document.createElement("table")
	var trHead = document.createElement("tr")

	var thId = document.createElement("th")
	thId.innerHTML = "ID"

	var thName = document.createElement("th")
	thName.innerHTML = "名前"

	var thButton = document.createElement("th")
	thButton.innerHTML = "削除"

	trHead.appendChild(tdId)
	trHead.appendChild(tdName)
	trHead.appendChild(tdButton)

	table.appendChild(trHead)

	for( var i = 0 , arrayLength = {$1}.length ; i < arrayLength ; i++){
		(()=>{
			var row = $1[i];

			var tr = document.createElement("tr")
			var tdId = document.createElement("td")
			tdId.innerHTML = String(row.id)

			var tdName = document.createElement("td")
			tdName.innerHTML = row.name

			var tdButton = document.createElement("td")
			var button = document.createElement("button")
			button.type = "button"
			button.innerHTML = "削除"
			button.addEventListener("click" , (e : Event)=>{

			tdButton.appendChild(button)

			tr.appendChild(trId)
			tr.appendChild(trName)
			tr.appendChild(trButton)

			table.appendChild(tr)
			})
		})
	)

snippet r
	/// <reference path="${1}" />

