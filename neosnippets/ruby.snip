snippet u
	#!mruby

snippet dts
	require "time";
	seconds = Time.strptime(${1} , '%Y-%m-%d %H:%M:%S').strftime('%s')

snippet sdt
	require "time";
	Time.now.strftime('%Y-%m-%d %H:%M:%S')

snippet s
	def ${1}() 
		
	end

snippet c
	class ${1} < ${2}
		
		attr_accessor :agent 
		
		def initialize()
			
		end
	end

snippet l
	${1}.each do |x| 
		${2}
	end

snippet select
	${1}.select do |x| 
		${2}
	end

snippet map
	${1}.map do |x| 
		${2}
	end

snippet sort
	${1}.sort do |x| 
		${2}
	end

snippet     if
abbr        if ... end
	if ${1:#:condition}
		${2:TARGET}
	end

snippet write
	File.open(${1}, 'w') do |fh|
		lines = fh.read
	end

snippet read
	File.open(${1}, 'r') do |fh|
		fh.puts(${2})
	end

snippet t
	create_table :${1}s  , :options => 'ENGINE=InnoDB DEFAULT CHARSET=utf8' do |t|
		t.references :${2} , null: false , cascade: true , foreign_key: {on_delete: :cascade} , index:{name: "$1s1" } 
		t.integer :${3} , null: false
	end

snippet v
	ActiveRecord::Base.connection.execute('
		CREATE VIEW \`${1}\` AS
			SELECT
				${2}.*,
			FROM 
				${3}
	')

snippet j
	INNER JOIN 
		${1}s ON $1s.id = ${2}.$1_id

snippet b
	begin
		${1}
	rescue Exception => e
		throw e
	end

snippet d
	p ${1}

snippet eq
	expect(${1}).to eq(${2})

snippet at
	expect(${1}).to be true
